document.addEventListener("DOMContentLoaded",function(){const dropdownToggle=document.querySelector(".dropdown-toggle");const dropdownContainer=document.querySelector(".dropdown-container");const sortItems=document.querySelectorAll(".custom-dropdown li");const bikeListContainer=document.querySelector(".modelSort");function parsePrice(priceString){return parseFloat(priceString.replace(/[^\d.-]/g,""))}
function sortBikes(sortType){const bikeList=document.querySelectorAll(".modelcodeIdentifier");const bikeArray=Array.from(bikeList);bikeArray.sort((a,b)=>{if(sortType==="price-asc"){return parsePrice(a.querySelector(".price-mc").textContent)-parsePrice(b.querySelector(".price-mc").textContent)}else if(sortType==="price-desc"){return parsePrice(b.querySelector(".price-mc").textContent)-parsePrice(a.querySelector(".price-mc").textContent)}else if(sortType==="new-arrival"){return new Date(b.dataset.arrival)-new Date(a.dataset.arrival)}else if(sortType==="popularity"){return parseInt(a.dataset.popularity)-parseInt(b.dataset.popularity)}});bikeListContainer.innerHTML="";bikeArray.forEach((bike)=>{bikeListContainer.appendChild(bike)})}
function applyDefaultSort(){const defaultSortItem=document.querySelector(".custom-dropdown li.active");if(defaultSortItem){sortBikes(defaultSortItem.dataset.value)}}
applyDefaultSort();dropdownContainer.classList.remove("active");dropdownToggle.addEventListener("click",function(){dropdownContainer.classList.toggle("active")});sortItems.forEach((item)=>{item.addEventListener("click",function(){const sortType=this.dataset.value;sortItems.forEach((li)=>li.classList.remove("active"));this.classList.add("active");dropdownToggle.textContent=this.textContent;dropdownContainer.classList.remove("active");sortBikes(sortType)})});document.addEventListener("click",function(e){if(!dropdownContainer.contains(e.target)&&!dropdownToggle.contains(e.target)){dropdownContainer.classList.remove("active")}});const filterButton=document.querySelector(".filter-section");const filterModal=document.querySelector(".filter-modal");const closeButton=document.querySelector(".close-button");const clearFilterButton=document.querySelector(".clear-filter-button");filterButton.addEventListener("click",function(event){if(event.target!==clearFilterButton&&!event.target.closest(".filter-tag")){filterModal.classList.add("active")}});closeButton.addEventListener("click",function(){filterModal.classList.remove("active")});clearFilterButton.addEventListener("click",function(event){event.stopPropagation();clearFilters()});document.querySelector(".apply-filter").addEventListener("click",function(){applyFilters();filterModal.classList.remove("active")});document.querySelector(".clear-filter").addEventListener("click",clearFilters);function applyFilters(){const selectedPriceRanges=Array.from(document.querySelectorAll(".price-item input:checked")).map(checkbox=>checkbox.value);const selectedCategories=Array.from(document.querySelectorAll(".category-item.selected")).map(category=>category.getAttribute("data-category").trim().toLowerCase());const activeFiltersContainer=document.querySelector(".active-filters");activeFiltersContainer.innerHTML="";selectedCategories.forEach(category=>{const categoryTag=document.createElement("span");categoryTag.classList.add("filter-tag");categoryTag.textContent=category.charAt(0).toUpperCase()+category.slice(1);const closeIcon=document.createElement("span");closeIcon.classList.add("close-icon");closeIcon.textContent="×";closeIcon.addEventListener("click",function(){const normalizedCategory=category.trim().toLowerCase();const categoryElement=Array.from(document.querySelectorAll(".category-item")).find(item=>item.getAttribute("data-category").trim().toLowerCase()===normalizedCategory);if(categoryElement){categoryElement.classList.remove("selected");console.log("Selected class removed from:",categoryElement)}else{console.warn("Category element not found for:",normalizedCategory)}
categoryTag.remove();const updatedCategories=Array.from(document.querySelectorAll(".category-item.selected")).map(c=>c.getAttribute("data-category").trim().toLowerCase());updateDisplayedCards(updatedCategories,selectedPriceRanges);toggleClearFilterButton()});categoryTag.appendChild(closeIcon);activeFiltersContainer.appendChild(categoryTag)});selectedPriceRanges.forEach(priceRange=>{const[min,max]=priceRange.split('-').map(val=>`${val.trim()}L`);const formattedRange=`${min} - ${max}`;const priceTag=document.createElement("span");priceTag.classList.add("filter-tag");priceTag.textContent=formattedRange;const closeIcon=document.createElement("span");closeIcon.classList.add("close-icon");closeIcon.textContent="×";closeIcon.addEventListener("click",function(){const priceInput=document.querySelector(`.price-item input[value="${priceRange}"]`);if(priceInput){priceInput.checked=!1}
priceTag.remove();const updatedPriceRanges=Array.from(document.querySelectorAll(".price-item input:checked")).map(c=>c.value);updateDisplayedCards(selectedCategories,updatedPriceRanges);toggleClearFilterButton()});priceTag.appendChild(closeIcon);activeFiltersContainer.appendChild(priceTag)});updateDisplayedCards(selectedCategories,selectedPriceRanges);toggleClearFilterButton()}
function updateDisplayedCards(selectedCategories,selectedPriceRanges){const allCards=document.querySelectorAll(".modelcodeIdentifier");allCards.forEach(card=>{const cardPrice=getCardPrice(card);const categoryData=card.getAttribute("data-category").trim().toLowerCase();const matchesCategory=selectedCategories.length===0||selectedCategories.includes(categoryData);const matchesPriceRange=selectedPriceRanges.length===0||selectedPriceRanges.some(range=>isPriceInRange(cardPrice,range));card.style.display=matchesCategory&&matchesPriceRange?"block":"none"});document.querySelector(".clear-filter-button").style.display=selectedCategories.length>0||selectedPriceRanges.length>0?"inline-block":"none"}
function toggleClearFilterButton(){const selectedCategories=document.querySelectorAll(".category-item.selected").length;const selectedRanges=document.querySelectorAll(".price-item input:checked").length;const clearButton=document.querySelector(".clear-filter-button");clearButton.style.display=selectedCategories>0||selectedRanges>0?"inline-block":"none"}
function clearFilters(){document.querySelectorAll(".category-item").forEach(category=>category.classList.remove("selected"));document.querySelectorAll(".price-item input").forEach(checkbox=>(checkbox.checked=!1));document.querySelectorAll(".modelcodeIdentifier").forEach(card=>(card.style.display="block"));const activeFiltersContainer=document.querySelector(".active-filters");activeFiltersContainer.innerHTML="";document.querySelector(".clear-filter-button").style.display="none"}
function getCardPrice(card){const priceText=card.querySelector(".price-mc").textContent.replace(/\s+/g,"");return parseFloat(priceText.replace(/[^0-9.]/g,""))}
function isPriceInRange(cardPrice,selectedRange){const ranges={"1-5":{min:100000,max:500000},"5-10":{min:500001,max:1000000},"10-25":{min:1000001,max:2500000}};const range=ranges[selectedRange];return cardPrice>=range.min&&cardPrice<=range.max}
const categoryItems=document.querySelectorAll(".category-item");categoryItems.forEach((categoryItem)=>{categoryItem.addEventListener("click",function(){this.classList.toggle("selected");applyFilters()})});const tabHeaders=document.querySelectorAll(".tab-header");const tabContents=document.querySelectorAll(".tab-content");tabHeaders.forEach((header)=>{header.addEventListener("click",function(){const activeTab=document.querySelector(".tab-header.active");if(activeTab){activeTab.classList.remove("active");document.querySelector(`#${activeTab.dataset.target}`).classList.remove("active")}
this.classList.add("active");document.querySelector(`#${this.dataset.target}`).classList.add("active")})})})